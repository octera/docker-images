name: Docker Build/Publish Image
on:  
  push:    
    branches: [ master, main ]  
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.value }}
    steps:
      - id: matrix
        run: |
          echo '::set-output name=value::["cups-gutenprint", "kivy-with-x"]'      
  build:
    needs: [ setup ]    
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        value: ${{fromJson(needs.setup.outputs.matrix)}}      
    env:      
      DOCKER_REGISTRY: registry.hub.docker.com
      DOCKER_IMAGE: octera/${{ matrix.value }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}  
      DOCKER_TARGET_PLATFORM: linux/arm64
    steps:    
    - name: Checkout the code       
      uses: actions/checkout@v1
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    # https://github.com/docker/setup-buildx-action
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Prepare      
      if: success()      
      id: prepare      
      run: |        
        echo ::set-output name=docker_platform::${DOCKER_TARGET_PLATFORM}        
        echo ::set-output name=docker_image::${DOCKER_REGISTRY}/${DOCKER_IMAGE}        
        echo ::set-output name=version::${GITHUB_RUN_NUMBER}    
    - name: Docker Login      
      if: success()      
      run: |        
        echo "${DOCKER_PASSWORD}" | docker login ${DOCKER_REGISTRY} --username "${DOCKER_USERNAME}" --password-stdin       
    - name: Run Buildx (push image)      
      if: success()      
      run: |        
        docker buildx build \
        --platform ${{ steps.prepare.outputs.docker_platform }} \
        --tag ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }} \
        --file ./pi/${{ matrix.value }}/Dockerfile \
        --output type=image,push=true ./pi/${{ matrix.value }}
